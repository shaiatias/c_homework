
1.1.1)

int (*h (int (*)(), int (*)()) ());

הפונקציה  מקבלת כפרמטר שתי פונקציות שלא מקבלות קלט ומחזירות מספר
היא מחזירה פונקציה שהפעלתה תחזיר מספר


1.1.2)

הפונקציה H מבצעת את שתי הפונקציות שנמסרו לה, ומחזירה הפנייה לזו שהערך המוחזר ממה גדול יותר (מבין השתיים).

פעולה זו מבוצעת על ידי השוואת התוצאה של הקריאה לפונציות. נראה כי התנאי הבוליאני מחזיר את הפונקציה כערך מוחזר.
התנאי מתבסס על כתובת הפונקציה, שמוחזר כשהוא מוכפל בתוצאת התנאי.
כלומר, אם הערך גדול יותר הכתובת תוכפל ב1, אחרת ב0.

היות ורק את יכולה להיות גדולה ממש => 0 + X = X

כלומר תוחזר הכתובת של הפונקציה הגדולה יותר.

1.1.3)

לאחר ביצוע ההרצה הערך של המשתנה RES יהיה 2
זאת בגלל שG מחזירה ערך גדול יותר, ולכך היא תתבצע, ותחזיר את הערך שלה, 2